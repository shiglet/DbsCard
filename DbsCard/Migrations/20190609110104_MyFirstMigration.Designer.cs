// <auto-generated />
using System;
using DbsCard.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DbsCard.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190609110104_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DbsCard.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseCardNumber");

                    b.Property<int>("CardColor");

                    b.Property<long>("CardCount");

                    b.Property<string>("CardId");

                    b.Property<string>("CardImg");

                    b.Property<string>("CardName");

                    b.Property<string>("CardNumber");

                    b.Property<int>("CardRarity");

                    b.Property<int>("CardSerie");

                    b.Property<int>("CardType");

                    b.Property<string>("Character");

                    b.Property<string>("ComboCost");

                    b.Property<string>("ComboPower");

                    b.Property<string>("Cost");

                    b.Property<long>("CostInt");

                    b.Property<DateTime>("DateDeleted");

                    b.Property<string>("Era");

                    b.Property<string>("FullCardName");

                    b.Property<bool>("IsLeader");

                    b.Property<bool>("IsPR");

                    b.Property<bool>("IsSideCard");

                    b.Property<string>("Keywords");

                    b.Property<string>("Label");

                    b.Property<long>("MaxAllowed");

                    b.Property<string>("OctgnId");

                    b.Property<long>("Power");

                    b.Property<long>("SideCardCount");

                    b.Property<int?>("SideCardId");

                    b.Property<string>("SkillPlainText");

                    b.Property<string>("SpecialTrait");

                    b.Property<string>("TextMatchScore");

                    b.Property<DateTimeOffset>("UpdatedOn");

                    b.HasKey("Id");

                    b.HasIndex("SideCardId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("DbsCard.Models.TcgData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CardId");

                    b.Property<double>("HighPrice");

                    b.Property<double>("LowPrice");

                    b.Property<double?>("MarketPrice");

                    b.Property<double>("MidPrice");

                    b.Property<string>("PartnerProductUrl");

                    b.Property<long>("ProductID");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductUrl");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("TcgData");
                });

            modelBuilder.Entity("DbsCard.Models.Card", b =>
                {
                    b.HasOne("DbsCard.Models.Card", "SideCard")
                        .WithMany()
                        .HasForeignKey("SideCardId");
                });

            modelBuilder.Entity("DbsCard.Models.TcgData", b =>
                {
                    b.HasOne("DbsCard.Models.Card")
                        .WithMany("TcgData")
                        .HasForeignKey("CardId");
                });
#pragma warning restore 612, 618
        }
    }
}
